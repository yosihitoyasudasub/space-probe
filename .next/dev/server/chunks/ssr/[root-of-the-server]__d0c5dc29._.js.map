{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///D:/my_projects/space-probe-game-next/space-probe-game-next/src/lib/threeSetup.ts"],"sourcesContent":["import * as THREE from 'three';\r\n\r\nexport function initThreeJS(canvas: HTMLCanvasElement) {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 10000);\r\n    camera.position.set(0, 5, 20);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio || 1, 2));\r\n\r\n    const ambient = new THREE.AmbientLight(0xffffff, 0.6);\r\n    scene.add(ambient);\r\n\r\n    const directional = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directional.position.set(5, 10, 7.5);\r\n    scene.add(directional);\r\n\r\n    // Simple grid for reference\r\n    const grid = new THREE.GridHelper(100, 100, 0x444444, 0x222222);\r\n    scene.add(grid);\r\n\r\n    function onResize() {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        renderer.setPixelRatio(Math.min(window.devicePixelRatio || 1, 2));\r\n    }\r\n\r\n    window.addEventListener('resize', onResize);\r\n\r\n    function dispose() {\r\n        window.removeEventListener('resize', onResize);\r\n        renderer.dispose();\r\n        // Traverse scene and dispose geometries/materials\r\n        scene.traverse((obj) => {\r\n            // @ts-ignore\r\n            if (obj.geometry) obj.geometry.dispose?.();\r\n            // @ts-ignore\r\n            if (obj.material) {\r\n                const mat = obj.material as any;\r\n                if (Array.isArray(mat)) mat.forEach((m) => m.dispose && m.dispose());\r\n                else mat.dispose && mat.dispose();\r\n            }\r\n        });\r\n    }\r\n\r\n    return { scene, camera, renderer, dispose };\r\n}\r\n\r\nexport default initThreeJS;\r\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,SAAS,YAAY,MAAyB;IACjD,MAAM,QAAQ,IAAI,0JAAW;IAC7B,MAAM,SAAS,IAAI,sKAAuB,CAAC,IAAI,OAAO,UAAU,GAAG,OAAO,WAAW,EAAE,KAAK;IAC5F,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG;IAE1B,MAAM,WAAW,IAAI,kKAAmB,CAAC;QAAE;QAAQ,WAAW;IAAK;IACnE,SAAS,OAAO,CAAC,OAAO,UAAU,EAAE,OAAO,WAAW;IACtD,SAAS,aAAa,CAAC,KAAK,GAAG,CAAC,OAAO,gBAAgB,IAAI,GAAG;IAE9D,MAAM,UAAU,IAAI,iKAAkB,CAAC,UAAU;IACjD,MAAM,GAAG,CAAC;IAEV,MAAM,cAAc,IAAI,qKAAsB,CAAC,UAAU;IACzD,YAAY,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI;IAChC,MAAM,GAAG,CAAC;IAEV,4BAA4B;IAC5B,MAAM,OAAO,IAAI,+JAAgB,CAAC,KAAK,KAAK,UAAU;IACtD,MAAM,GAAG,CAAC;IAEV,SAAS;QACL,OAAO,MAAM,GAAG,OAAO,UAAU,GAAG,OAAO,WAAW;QACtD,OAAO,sBAAsB;QAC7B,SAAS,OAAO,CAAC,OAAO,UAAU,EAAE,OAAO,WAAW;QACtD,SAAS,aAAa,CAAC,KAAK,GAAG,CAAC,OAAO,gBAAgB,IAAI,GAAG;IAClE;IAEA,OAAO,gBAAgB,CAAC,UAAU;IAElC,SAAS;QACL,OAAO,mBAAmB,CAAC,UAAU;QACrC,SAAS,OAAO;QAChB,kDAAkD;QAClD,MAAM,QAAQ,CAAC,CAAC;YACZ,aAAa;YACb,IAAI,IAAI,QAAQ,EAAE,IAAI,QAAQ,CAAC,OAAO;YACtC,aAAa;YACb,IAAI,IAAI,QAAQ,EAAE;gBACd,MAAM,MAAM,IAAI,QAAQ;gBACxB,IAAI,MAAM,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,IAAM,EAAE,OAAO,IAAI,EAAE,OAAO;qBAC5D,IAAI,OAAO,IAAI,IAAI,OAAO;YACnC;QACJ;IACJ;IAEA,OAAO;QAAE;QAAO;QAAQ;QAAU;IAAQ;AAC9C;uCAEe","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///D:/my_projects/space-probe-game-next/space-probe-game-next/src/components/GameCanvas.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useRef } from 'react';\nimport { initThreeJS } from '../lib/threeSetup';\n\nconst GameCanvas: React.FC = () => {\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\n    const rafRef = useRef<number | null>(null);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n\n        const { scene, camera, renderer, dispose } = initThreeJS(canvas);\n\n        const animate = () => {\n            // Game update hooks would go here (physics, controls, etc.)\n            renderer.render(scene, camera);\n            rafRef.current = requestAnimationFrame(animate);\n        };\n\n        rafRef.current = requestAnimationFrame(animate);\n\n        return () => {\n            if (rafRef.current) cancelAnimationFrame(rafRef.current);\n            dispose();\n        };\n    }, []);\n\n    return <canvas ref={canvasRef} style={{ display: 'block', width: '100vw', height: '100vh' }} />;\n};\n\nexport default GameCanvas;"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,aAAuB;IACzB,MAAM,YAAY,IAAA,+MAAM,EAA2B;IACnD,MAAM,SAAS,IAAA,+MAAM,EAAgB;IAErC,IAAA,kNAAS,EAAC;QACN,MAAM,SAAS,UAAU,OAAO;QAChC,IAAI,CAAC,QAAQ;QAEb,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAA,uIAAW,EAAC;QAEzD,MAAM,UAAU;YACZ,4DAA4D;YAC5D,SAAS,MAAM,CAAC,OAAO;YACvB,OAAO,OAAO,GAAG,sBAAsB;QAC3C;QAEA,OAAO,OAAO,GAAG,sBAAsB;QAEvC,OAAO;YACH,IAAI,OAAO,OAAO,EAAE,qBAAqB,OAAO,OAAO;YACvD;QACJ;IACJ,GAAG,EAAE;IAEL,qBAAO,8OAAC;QAAO,KAAK;QAAW,OAAO;YAAE,SAAS;YAAS,OAAO;YAAS,QAAQ;QAAQ;;;;;;AAC9F;uCAEe","debugId":null}}]
}